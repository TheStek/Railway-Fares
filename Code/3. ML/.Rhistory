library(tidyverse)
library(jsonlite)
log_path <- "C:/Users/User/Documents/4. Fourth Year/Project/Railway-Fares/Logs/"
lin_reg <- fromJSON(paste(log_path, "linear_regression.json", sep = ""))
lin_reg %>% arrange(desc(val_score))
lin_reg %>% arrange(subset, desc(val_score))
library(tidyverse)
library(jsonlite)
log_path <- "C:/Users/User/Documents/4. Fourth Year/Project/Railway-Fares/Logs/"
lin_reg <- fromJSON(paste(log_path, "linear_regression.json", sep = ""))
lin_reg %>% arrange(subset, desc(val_score))
library(tidyverse)
library(jsonlite)
log_path <- "C:/Users/User/Documents/4. Fourth Year/Project/Railway-Fares/Logs/"
lin_reg <- fromJSON(paste(log_path, "linear_regression.json", sep = ""))
lin_reg %>% arrange(subset, desc(val_score))
lin_reg %>% filter(method = "pca_linreg") %>% arrange(desc(val_score))
lin_reg %>% filter(method == "pca_linreg") %>% arrange(desc(val_score))
rfr <- fromJSON(paste(log_path, "random_forest_regression.json", sep = ""))
rfr %>% arrange(desc(val_score))
rfr <- fromJSON(paste(log_path, "random_forest_regression.json", sep = ""))
rfr %>% arrange(desc(val_score))
gpr %>% arrange(dest(val_score))
library(tidyverse)
library(jsonlite)
log_path <- "C:/Users/User/Documents/4. Fourth Year/Project/Railway-Fares/Logs/"
gpr <- fromJSON(paste(log_path, "gpr_ensemble.json", sep = ""))
gpr %>% arrange(dest(val_score))
gpr %>% arrange(desc(val_score))
gpr %>% arrange(subset, kernel, desc(val_score))
gpr <- fromJSON(paste(log_path, "gpr_ensemble.json", sep = ""))
gpr %>% arrange(desc(val_score))
gpr <- fromJSON(paste(log_path, "gpr_ensemble.json", sep = ""))
gpr %>% arrange(desc(val_score))
library(tidyverse)
library(jsonlite)
log_path <- "C:/Users/User/Documents/4. Fourth Year/Project/Railway-Fares/Logs/"
lin_reg <- fromJSON(paste(log_path, "linear_regression.json", sep = ""))
lin_reg %>% arrange(subset, desc(val_score))
lin_reg %>%
group_by(method, dataset, subset) %>%
summarise(mean.val_score = mean(val_score),
sd.val_score = sd(val_score),
n.val_score = n())
lin_reg %>%
group_by(method, dataset, subset) %>%
summarise(mean.val_score = mean(val_score),
sd.val_score = sd(val_score),
n.val_score = n()) %>%
mutate(se.val_score = sd.val_score / sqrt(n.val_score),
lower.ci.val_score = mean.val_score - qt(1 - (0.05 / 2), n.val_score - 1) * se.val_score,
upper.ci.val_score = mean.val_score + qt(1 - (0.05 / 2), n.val_score - 1) * se.val_score)
View(lin_reg)
lin_reg %>%
group_by(method, dataset, subset) %>%
summarise(mean.val_score = mean(val_score),
sd.val_score = sd(val_score),
n.val_score = n()) %>%
mutate(se.val_score = sd.val_score / sqrt(n.val_score),
ci_width = qt(1 - (0.05 / 2), n.val_score - 1) * se.val_score,
lower.ci.val_score = mean.val_score - qt(1 - (0.05 / 2), n.val_score - 1) * se.val_score,
upper.ci.val_score = mean.val_score + qt(1 - (0.05 / 2), n.val_score - 1) * se.val_score)
lin_reg %>%
group_by(method, dataset, subset) %>%
summarise(mean.val_score = mean(val_score),
sd.val_score = sd(val_score),
n.val_score = n()) %>%
mutate(se.val_score = sd.val_score / sqrt(n.val_score),
ci_width = qt(1 - (0.025 / 2), n.val_score - 1) * se.val_score,
lower.ci.val_score = mean.val_score - ci_width,
upper.ci.val_score = mean.val_score + ci_width)
library(tidyverse)
library(jsonlite)
log_path <- "C:/Users/User/Documents/4. Fourth Year/Project/Railway-Fares/Logs/"
gpr <- fromJSON(paste(log_path, "gpr_ensemble.json", sep = ""))
gpr %>%
group_by(method, dataset, subset) %>%
summarise(mean.val_score = mean(val_score),
sd.val_score = sd(val_score),
n.val_score = n()) %>%
mutate(se.val_score = sd.val_score / sqrt(n.val_score),
ci_width = qt(1 - (0.025 / 2), n.val_score - 1) * se.val_score,
lower.ci.val_score = mean.val_score - ci_width,
upper.ci.val_score = mean.val_score + ci_width)
View(gpr)
gpr %>% filter(n_components == 11)
library(tidyverse)
library(jsonlite)
log_path <- "C:/Users/User/Documents/4. Fourth Year/Project/Railway-Fares/Logs/"
rfr <- fromJSON(paste(log_path, "random_forest_regression.json", sep = ""))
rfr %>%
group_by(method, dataset, subset) %>%
summarise(mean.val_score = mean(val_score),
sd.val_score = sd(val_score),
n.val_score = n()) %>%
mutate(se.val_score = sd.val_score / sqrt(n.val_score),
ci_width = qt(1 - (0.025 / 2), n.val_score - 1) * se.val_score,
lower.ci.val_score = mean.val_score - ci_width,
upper.ci.val_score = mean.val_score + ci_width)
lin_reg %>%
group_by(method, dataset, subset) %>%
summarise(mean.val_score = mean(val_score),
sd.val_score = sd(val_score),
n.val_score = n()) %>%
mutate(se.val_score = sd.val_score / sqrt(n.val_score),
ci_width = qt(1 - (0.025 / 2), n.val_score - 1) * se.val_score,
lower.ci.val_score = mean.val_score - ci_width,
upper.ci.val_score = mean.val_score + ci_width)
lin_reg %>%
group_by(method, dataset, subset) %>%
summarise(mean.val_score = mean(val_score),
sd.val_score = sd(val_score),
n.val_score = n()) %>%
mutate(se.val_score = sd.val_score / sqrt(n.val_score),
ci_width = qt(1 - (0.025 / 2), n.val_score - 1) * se.val_score,
lower.ci.val_score = mean.val_score - ci_width,
upper.ci.val_score = mean.val_score + ci_width) %>%
select(method, subset, mean.val_score, ci_width)
lin_reg %>%
group_by(method, dataset, subset) %>%
summarise(mean.val_score = mean(val_score),
sd.val_score = sd(val_score),
n.val_score = n()) %>%
mutate(se.val_score = sd.val_score / sqrt(n.val_score),
ci_width = qt(1 - (0.025 / 2), n.val_score - 1) * se.val_score,
lower.ci.val_score = mean.val_score - ci_width,
upper.ci.val_score = mean.val_score + ci_width)
lin_reg %>%
group_by(method, dataset, subset) %>%
summarise(mean.val_score = mean(val_score),
sd.val_score = sd(val_score),
n.val_score = n()) %>%
mutate(se.val_score = sd.val_score / sqrt(n.val_score),
ci_width = qt(1 - (0.025 / 2), n.val_score - 1) * se.val_score,
lower.ci.val_score = mean.val_score - ci_width,
upper.ci.val_score = mean.val_score + ci_width) %>%
select(method, subset, mean.val_score, ci_width)
lin_reg %>%
group_by(method, dataset, subset) %>%
summarise(mean.val_score = mean(val_score),
sd.val_score = sd(val_score),
n.val_score = n()) %>%
mutate(se.val_score = sd.val_score / sqrt(n.val_score),
ci_width = qt(1 - (0.025 / 2), n.val_score - 1) * se.val_score,
lower.ci.val_score = mean.val_score - ci_width,
upper.ci.val_score = mean.val_score + ci_width) %>%
select(method, subset, mean.val_score, ci_width) %>%
mutate(width = formatC(ci_width, format = "e", digits = 2))
lin_reg %>%
group_by(method, dataset, subset) %>%
summarise(mean.val_score = mean(val_score),
sd.val_score = sd(val_score),
n.val_score = n()) %>%
mutate(se.val_score = sd.val_score / sqrt(n.val_score),
ci_width = qt(1 - (0.025 / 2), n.val_score - 1) * se.val_score,
lower.ci.val_score = mean.val_score - ci_width,
upper.ci.val_score = mean.val_score + ci_width) %>%
mutate(width = formatC(ci_width, format = "e", digits = 2)) %>%
select(method, subset, mean.val_score, width)
lin_reg %>%
group_by(method, dataset, subset) %>%
summarise(mean.val_score = mean(val_score),
sd.val_score = sd(val_score),
n.val_score = n()) %>%
mutate(se.val_score = sd.val_score / sqrt(n.val_score),
ci_width = qt(1 - (0.025 / 2), n.val_score - 1) * se.val_score,
lower.ci.val_score = mean.val_score - ci_width,
upper.ci.val_score = mean.val_score + ci_width) %>%
mutate(width = formatC(ci_width, format = "e", digits = 2)) %>%
select(method, subset, mean.val_score, width) %>%
arrange(subset)
rfr %>%
group_by(method, dataset, subset) %>%
summarise(mean.val_score = mean(val_score),
sd.val_score = sd(val_score),
n.val_score = n()) %>%
mutate(se.val_score = sd.val_score / sqrt(n.val_score),
ci_width = qt(1 - (0.025 / 2), n.val_score - 1) * se.val_score,
lower.ci.val_score = mean.val_score - ci_width,
upper.ci.val_score = mean.val_score + ci_width) %>%
mutate(width = formatC(ci_width, format = "e", digits = 2)) %>%
select(method, subset, mean.val_score, width) %>%
arrange(subset)
rfr %>%
group_by(method, dataset, subset) %>%
summarise(mean.val_score = mean(val_score),
sd.val_score = sd(val_score),
n.val_score = n()) %>%
mutate(se.val_score = sd.val_score / sqrt(n.val_score),
ci_width = qt(1 - (0.025 / 2), n.val_score - 1) * se.val_score,
lower.ci.val_score = mean.val_score - ci_width,
upper.ci.val_score = mean.val_score + ci_width) %>%
mutate(width = formatC(ci_width, format = "e", digits = 2)) %>%
select(method, subset, mean.val_score, width) %>%
filter(method == 'pca_rfr')
ggplot(data = lin_reg %>%
mutate(desc = paste(method, subset, sep = " - ")))+
geom_boxplot(aes(x = desc, y = val_score), stat = "identity")
ggplot(data = lin_reg %>%
mutate(desc = paste(method, subset, sep = " - ")))+
geom_boxplot(aes(x = desc, y = val_score))
ggplot(data = lin_reg %>%
mutate(desc = paste(method, subset, sep = " - ")))+
geom_boxplot(aes(x = desc, y = val_score))+
coord_flip()
ggplot(data = lin_reg %>%
filter(val_score > 0.75) %>%
mutate(desc = paste(method, subset, sep = " - ")))+
geom_boxplot(aes(x = desc, y = val_score))+
coord_flip()
ggplot(data = gpr %>%
filter(val_score > 0.75) %>%
mutate(desc = paste(method, subset, sep = " - ")))+
geom_boxplot(aes(x = desc, y = val_score))+
coord_flip()
ggplot(data = gpr %>%
filter(val_score > 0) %>%
mutate(desc = paste(method, subset, sep = " - ")))+
geom_boxplot(aes(x = desc, y = val_score))+
coord_flip()
ggplot(data = gpr %>%
filter(val_score > 0.7) %>%
mutate(desc = paste(method, subset, sep = " - ")))+
geom_boxplot(aes(x = desc, y = val_score))+
coord_flip()
ggplot(data = gpr %>%
filter(val_score > 0.7) %>%
mutate(desc = paste(method, subset, sep = " - ", PCA == ifelse(contains("pca", method), "Yes", "No"))))+
geom_boxplot(aes(x = desc, y = val_score, color = PCA))+
coord_flip()
ggplot(data = gpr %>%
filter(val_score > 0.7) %>%
mutate(desc = paste(method, subset, sep = " - ", PCA == ifelse(contains("pca", method), "Yes", "No"))))+
geom_boxplot(aes(x = desc, y = val_score, fill = PCA))+
coord_flip()
geom_boxplot(aes(x = desc, y = val_score), fill = ifelse(contains("pca", method), "black", "red"))+
coord_flip()
coord_flip()
ggplot(data = gpr %>%
filter(val_score > 0.7) %>%
mutate(desc = ifelse(contains("pca", method), paste("PCA", subset, sep = " - "), subset)))+
geom_boxplot(aes(x = desc, y = val_score))+
coord_flip()
ggplot(data = gpr %>%
filter(val_score > 0.7) %>%
mutate(desc = ifelse(contains("pca", method), paste("PCA", subset, sep = " - "), subset))
)+
geom_boxplot(aes(x = desc, y = val_score))+
coord_flip()
gpr %>%
filter(val_score > 0.7) %>%
mutate(desc = ifelse(contains("pca", method), paste("PCA", subset, sep = " - "), subset))
ggplot(data = gpr %>%
filter(val_score > 0.7) %>%
mutate(desc = ifelse(grepl("pca", method), paste("PCA", subset, sep = " - "), subset))
)+
geom_boxplot(aes(x = desc, y = val_score))+
coord_flip()
ggplot(data = gpr %>%
filter(val_score > 0.7) %>%
mutate(desc = ifelse(grepl("pca", method), paste("PCA", subset, sep = " - "), subset))
)+
geom_boxplot(aes(x = reorder(desc, desc), y = val_score))+
coord_flip()
ggplot(data = gpr %>%
filter(val_score > 0.7) %>%
mutate(desc = ifelse(grepl("pca", method), paste("PCA", subset, sep = " - "), subset))
)+
geom_boxplot(aes(x = desc, y = reorder(val_score, -desc)))+
coord_flip()
ggplot(data = gpr %>%
filter(val_score > 0.7) %>%
mutate(desc = ifelse(grepl("pca", method), paste("PCA", subset, sep = " - "), subset))
)+
geom_boxplot(aes(x = desc, y = reorder(val_score, desc)))+
coord_flip()
geom_boxplot(aes(x = desc, y = val_score)+
ggplot(data = gpr %>%
filter(val_score > 0.7) %>%
mutate(desc = ifelse(grepl("pca", method), paste("PCA", subset, sep = " - "), subset))
)+
geom_boxplot(aes(x = desc, y = val_score))+
coord_flip()
ggplot(data = gpr %>%
filter(val_score > 0.7) %>%
mutate(desc = ifelse(grepl("pca", method), paste("PCA", subset, sep = " - "), subset))
)+
geom_boxplot(aes(x = desc, y = val_score))+
coord_flip()
ggplot(data = gpr %>%
filter(val_score > 0.7) %>%
mutate(desc = ifelse(grepl("pca", method), paste("PCA", subset, sep = " - "), subset))
)+
geom_boxplot(aes(x = desc, y = val_score))+
coord_flip()
ggplot(data = gpr %>%
filter(val_score > 0.7) %>%
mutate(desc = ifelse(grepl("pca", method), paste("PCA", subset, sep = " - "), subset))
)+
geom_boxplot(aes(x = reorder(desc, val_score), y = val_score))+
coord_flip()
ggplot(data = gpr %>%
filter(val_score > 0.7) %>%
mutate(desc = ifelse(grepl("pca", method), paste("PCA", subset, sep = " - "), subset))
)+
geom_boxplot(aes(x = reorder(desc, val_score), y = val_score), color = "blue")+
coord_flip()
ggplot(data = gpr %>%
filter(val_score > 0.7) %>%
mutate(desc = ifelse(grepl("pca", method), paste("PCA", subset, sep = " - "), subset))
)+
geom_boxplot(aes(x = reorder(desc, val_score), y = val_score), color = "blue", fill = "blue")+
coord_flip()
ggplot(data = gpr %>%
filter(val_score > 0.7) %>%
mutate(desc = ifelse(grepl("pca", method), paste("PCA", subset, sep = " - "), subset))
)+
geom_boxplot(aes(x = reorder(desc, val_score), y = val_score), color = "black", fill = "blue")+
coord_flip()
c('dist', 'dist_time', 'dist_remoteness', 'full', 'simd')
tibble(c('dist', 'dist_time', 'dist_remoteness', 'full', 'simd'),
c('Distance', 'Distance + Time', 'Distance + Remoteness', 'Full', 'SIMD'))
subset_mapping <- tibble(
code_name = c('dist', 'dist_time', 'dist_remoteness', 'full', 'simd'),
name = c('Distance', 'Distance + Time', 'Distance + Remoteness', 'Full', 'SIMD'))
View(subset_mapping)
gpr %>%
filter(val_score > 0.7) %>%
inner_join(subset_mapping, by = c(subset = code_name))
gpr %>%
filter(val_score > 0.7) %>%
inner_join(subset_mapping, by = c("subset" = "code_name"))
ggplot(data = gpr %>%
filter(val_score > 0.7) %>%
inner_join(subset_mapping, by = c("subset" = "code_name")) %>%
mutate(desc = ifelse(grepl("pca", method), paste("PCA", name, sep = " - "), name))
)+
geom_boxplot(aes(x = reorder(desc, val_score), y = val_score), color = "black", fill = "blue")+
coord_flip() +
ggplot(data = gpr %>%
filter(val_score > 0.7) %>%
inner_join(subset_mapping, by = c("subset" = "code_name")) %>%
mutate(desc = ifelse(grepl("pca", method), paste("PCA", name, sep = " - "), name))
)+
geom_boxplot(aes(x = reorder(desc, val_score), y = val_score), color = "black", fill = "blue")+
coord_flip()
ggplot(data = gpr %>%
filter(val_score > 0.7) %>%
inner_join(subset_mapping, by = c("subset" = "code_name")) %>%
mutate(desc = ifelse(grepl("pca", method), paste("PCA", name, sep = " - "), name))
)+
geom_boxplot(aes(x = reorder(desc, val_score), y = val_score), color = "black", fill = "blue")+
coord_flip()
ggplot(data = gpr %>%
filter(val_score > 0.7) %>%
inner_join(subset_mapping, by = c("subset" = "code_name")) %>%
mutate(desc = ifelse(grepl("pca", method), paste("PCA", name, sep = " - "), name))
)+
geom_boxplot(aes(x = reorder(desc, val_score), y = val_score), color = "black", fill = "blue")+
coord_flip()+
xlab("Data Subset")+
ylab("Validation Score")
subset_mapping <- tibble(
code_name = c('dist', 'dist_time', 'dist_remoteness', 'full', 'simd'),
name = c('Distance', 'Distance + Time', 'Distance + Remoteness', 'Full', 'SIMD'))
ggplot(data = gpr %>%
filter(val_score > 0.7) %>%
inner_join(subset_mapping, by = c("subset" = "code_name")) %>%
mutate(desc = ifelse(grepl("pca", method), paste("PCA", name, sep = " - "), name))
)+
geom_boxplot(aes(x = reorder(desc, val_score), y = val_score), color = "black", fill = "blue")+
coord_flip()+
xlab("Data Subset")+
ylab("Validation Score")
ggplot(data = lin_reg %>%
filter(val_score > 0.7) %>%
inner_join(subset_mapping, by = c("subset" = "code_name")) %>%
mutate(desc = ifelse(grepl("pca", method), paste("PCA", name, sep = " - "), name))
)+
geom_boxplot(aes(x = reorder(desc, val_score), y = val_score), color = "black", fill = "blue")+
coord_flip()+
xlab("Data Subset")+
ylab("Validation Score")
ggplot(data = rfr %>%
filter(val_score > 0.7) %>%
inner_join(subset_mapping, by = c("subset" = "code_name")) %>%
mutate(desc = ifelse(grepl("pca", method), paste("PCA", name, sep = " - "), name))
)+
geom_boxplot(aes(x = reorder(desc, val_score), y = val_score), color = "black", fill = "blue")+
coord_flip()+
xlab("Data Subset")+
ylab("Validation Score")
ggplot(data = rfr %>%
filter(val_score > 0.9) %>%
inner_join(subset_mapping, by = c("subset" = "code_name")) %>%
mutate(desc = ifelse(grepl("pca", method), paste("PCA", name, sep = " - "), name))
)+
geom_boxplot(aes(x = reorder(desc, val_score), y = val_score), color = "black", fill = "blue")+
coord_flip()+
xlab("Data Subset")+
ylab("Validation Score")
ggplot(data = rfr %>%
filter(val_score > 0.96) %>%
inner_join(subset_mapping, by = c("subset" = "code_name")) %>%
mutate(desc = ifelse(grepl("pca", method), paste("PCA", name, sep = " - "), name))
)+
geom_boxplot(aes(x = reorder(desc, val_score), y = val_score), color = "black", fill = "blue")+
coord_flip()+
xlab("Data Subset")+
ylab("Validation Score")
library(jsonlite)
library(tidyverse)
library(jsonlite)
log_path <- "C:/Users/User/Documents/4. Fourth Year/Project/Railway-Fares/Logs/"
gpr <- fromJSON(paste(log_path, "gpr_ensemble.json", sep = ""))
gpr %>%
group_by(method, dataset, subset) %>%
summarise(mean.val_score = mean(val_score),
sd.val_score = sd(val_score),
n.val_score = n()) %>%
mutate(se.val_score = sd.val_score / sqrt(n.val_score),
ci_width = qt(1 - (0.025 / 2), n.val_score - 1) * se.val_score,
lower.ci.val_score = mean.val_score - ci_width,
upper.ci.val_score = mean.val_score + ci_width)
subset_mapping <- tibble(
code_name = c('dist', 'dist_time', 'dist_remoteness', 'full', 'simd'),
name = c('Distance', 'Distance + Time', 'Distance + Remoteness', 'Full', 'SIMD'))
